syntax = "proto3";

package combined;

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  // Additional auth-related methods specific to AuthService can be added here
}

service UserService {
    rpc createUser(CreateUserDto) returns (User2);
    rpc findAllUser(EmptyUser) returns (Users);
    rpc findOneUser(FindOneUserDto) returns (User2);
    rpc updateUser(UpdateUserDto) returns (User2);
    rpc removeUser(FindOneUserDto) returns (User2);
    // Additional user-related methods specific to UserService can be added here
}

message RegisterRequest {
  string username = 1;
  string password = 2;
}

message RegisterResponse {
  string message = 1;
  string userId = 2;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
}

message UserPaginationDto {
  int32 page = 1;
  int32 skip = 2;
}

message UpdateUserDto {
  string id = 1;
  int32 age = 2;
  string phoneNumber = 3; 
  string role = 4;   
  SocialMedia2 socialMedia = 5;
}

message FindOneUserDto {
  string id = 1;
}

message EmptyUser {}

message Users {
  repeated User2 users = 1;
}

message CreateUserDto {
  string username = 1;
  string password = 2;
  optional int32 age = 3;
  string email = 4;       
  string phoneNumber = 5; 
  string role = 6;        
}

message User2 {
  string id = 1;
  string username = 2;
  string password = 3;
  int32 age = 4;
  bool subscribed = 5;
  optional SocialMedia2 socialMedia = 6;
  string email = 7;
  string phoneNumber = 8;
  string role = 9; 
}

message SocialMedia2 {
  optional string twitterUri = 1;
  optional string fbUri = 2;
}
